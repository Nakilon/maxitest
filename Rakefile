require "bundler/setup"
require "bundler/gem_tasks"
require "bump/tasks"
require "wwtd/tasks"

desc "Run all tests"
task :default do
  sh "rspec spec/"
end

desc "Update all dependencies"
task :update do
  require "open-uri"

  Dir["lib/maxitest/vendor/*"].each do |file|
    parts = File.read(file).split(%r{(# https://.*)})

    parts = [parts[0].strip] + parts[1..-1].each_slice(2).map do |url, section|
      do_not_modify = "generated by rake update, do not modify"
      code = open(url.sub("# ", "")).read.gsub(/require .*?\n/, "").strip
      code = "=begin\n#{code}\n=end" if url.include?("LICENSE")

      if url.end_with?("testrbl.rb")
        # nest under Maxitest to avoid collision
        code = "module Maxitest\n#{code.gsub(/^/, "  ").gsub(/^\s+$/, "")}\nend"
      elsif url.end_with?("line_plugin.rb")
        # replace ruby with mtest
        raise unless code.sub!(%{output = "ruby \#{file} -l \#{line}"}, %{output = "mtest \#{file}:\#{line}"})
      elsif url.end_with?('around/spec.rb')
        # do not fail with resume for nill class when before was never called
        # for example when putting <% raise %> into a fixture file
        raise unless code.sub!(%{fib.resume unless fib == :failed}, %{fib.resume if fib && fib != :failed})
      end

      "#{url}\n# BEGIN #{do_not_modify}\n#{code.strip}\n#END #{do_not_modify}"
    end

    File.write(file, parts.reject(&:empty?).join("\n\n"))
  end
end
